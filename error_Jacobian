function JSP=error_Jacobian(Q1)
L=zeros(3,6);JSP=[];
[b,p,L0]=parameters;
%% 
x=Q1(:,1);y=Q1(:,2);z=Q1(:,3);
tP_B=[x,y,z]';
%% 
A=Q1(:,4);B=Q1(:,5);C=Q1(:,6);
for i=1:size(Q1,1)
    RP_B=rotationmatrix(A(i),B(i),C(i));
    L(:,1)=tP_B(:,i)+RP_B*p(:,1)-b(:,1);
    L(:,2)=tP_B(:,i)+RP_B*p(:,2)-b(:,2);
    L(:,3)=tP_B(:,i)+RP_B*p(:,3)-b(:,3);
    L(:,4)=tP_B(:,i)+RP_B*p(:,4)-b(:,4);
    L(:,5)=tP_B(:,i)+RP_B*p(:,5)-b(:,5);
    L(:,6)=tP_B(:,i)+RP_B*p(:,6)-b(:,6);
    S1=L(:,1)/norm(L(:,1));
    S2=L(:,2)/norm(L(:,2));
    S3=L(:,3)/norm(L(:,3));
    S4=L(:,4)/norm(L(:,4)); 
    S5=L(:,5)/norm(L(:,5));
    S6=L(:,6)/norm(L(:,6));  
    RP1=cross(RP_B*p(:,1),S1);
    RP2=cross(RP_B*p(:,2),S2);
    RP3=cross(RP_B*p(:,3),S3);
    RP4=cross(RP_B*p(:,4),S4);
    RP5=cross(RP_B*p(:,5),S5);
    RP6=cross(RP_B*p(:,6),S6); 
    JS=[S1',RP1'; S2',RP2'; S3',RP3'; S4',RP4'; S5',RP5'; S6',RP6'];

    belta=B(i)*pi/180; 
    gamma=C(i)*pi/180;

    H=[1, 0, 0, 0,                      0,              0;
       0, 1, 0, 0,                      0,              0;
       0, 0, 1, 0,                      0,              0;
       0, 0, 0, cos(gamma)*cos(belta),  -1*sin(gamma),  0;
       0, 0, 0, sin(gamma)*cos(belta),  cos(gamma),     0;
       0, 0, 0, -1*sin(belta),          0,              1];
    JSH=JS * H;
    JP=[S1',-1*S1'*RP_B,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;
        0,0,0,0,0,0,0,S2',-1*S2'*RP_B,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,S3',-1*S3'*RP_B,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,S4',-1*S4'*RP_B,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0;
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,S5',-1*S5'*RP_B,1,0,0,0,0,0,0,0;
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,S6',-1*S6'*RP_B,1];
    JSP=[JSP;JSH\JP];
end
end
 
